{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "JSON Calendar File Format Schema",
  "description": "A JSON Schema for the modern .jsoncalendar file format proposal, focusing on events and core calendaring features.",
  "$defs": {
    "Duration": {
      "title": "Duration",
      "description": "A structured representation of an ISO 8601 duration. At least one property is required.",
      "type": "object",
      "minProperties": 1,
      "properties": {
        "years": {
          "type": "number",
          "minimum": 0
        },
        "months": {
          "type": "number",
          "minimum": 0
        },
        "days": {
          "type": "number",
          "minimum": 0
        },
        "hours": {
          "type": "number",
          "minimum": 0
        },
        "minutes": {
          "type": "number",
          "minimum": 0
        },
        "seconds": {
          "type": "number",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "Recurrence": {
      "title": "Recurrence",
      "description": "Details for recurring events.",
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "second",
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "year"
          ],
          "description": "The frequency of recurrence."
        },
        "interval": {
          "type": "integer",
          "minimum": 1,
          "description": "The interval between recurrences."
        },
        "until": {
          "type": "string",
          "format": "date-time",
          "description": "When the recurrence ends, date and time in ISO 8601 format, including the timezone offset (e.g., '2024-03-10T10:00:00-05:00')"
        },
        "count": {
          "type": "integer",
          "minimum": 1,
          "description": "The number of occurrences."
        },
        "byDay": {
          "type": "array",
          "description": "Optional array specifying the days of the week for recurrence. Items can be simple weekday abbreviations (MO, TU, etc.) or ordinal day strings like '1MO' or '-1SU'.",
          "items": {
            "type": "string",
            "pattern": "^-?[1-5]?(MO|TU|WE|TH|FR|SA|SU)$"
          }
        },
        "byMonthDay": {
          "type": "array",
          "description": "Optional array specifying the days of the month for recurrence (1-31 or -31 to -1, zero is not allowed).",
          "items": {
            "type": "integer",
            "minimum": -31,
            "maximum": 31,
            "not": {
              "const": 0
            }
          }
        },
        "weekStart": {
          "type": "string",
          "description": "Optional week start day for the recurrence (defaults to MO if not provided).",
          "enum": [
            "MO",
            "TU",
            "WE",
            "TH",
            "FR",
            "SA",
            "SU"
          ]
        },
        "exceptionDates": {
          "type": "array",
          "description": "Optional array of date-time values representing exceptions to the recurrence rule.",
          "items": {
            "type": "string",
            "format": "date-time",
            "description": "Exception date and time in ISO 8601 format, including the timezone offset (e.g., '2024-03-10T10:00:00-05:00')."
          }
        },
        "recurrenceAdditions": {
          "type": "array",
          "description": "Optional array of date-time values representing additional dates included in the recurrence.",
          "items": {
            "type": "string",
            "format": "date-time",
            "description": "Recurrence date and time in ISO 8601 format, including the timezone offset (e.g., '2024-03-10T10:00:00-05:00')."
          }
        }
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "required": [
            "frequency",
            "interval"
          ]
        },
        {
          "required": [
            "until"
          ]
        },
        {
          "required": [
            "count"
          ]
        }
      ],
      "errorMessage": {
        "oneOf": "Recurrence must have 'frequency' and 'interval' or 'until' or 'count'."
      }
    },
    "Attendee": {
      "title": "Attendee",
      "description": "A calendar event attendee.",
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The attendee's name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The attendee's email address."
        },
        "responseStatus": {
          "type": "string",
          "enum": [
            "accepted",
            "declined",
            "tentative",
            "needs-action"
          ],
          "description": "The attendee's response status."
        }
      },
      "additionalProperties": false
    },
    "Notification": {
      "title": "Notification",
      "description": "A notification or reminder for an event.",
      "type": "object",
      "required": [
        "action",
        "trigger"
      ],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "display",
            "email"
          ],
          "description": "The type of notification."
        },
        "trigger": {
          "oneOf": [
            {
              "$ref": "#/$defs/Duration"
            },
            {
              "type": "string",
              "format": "date-time",
              "description": "An absolute date-time when the notification should trigger."
            }
          ],
          "description": "Either a structured duration object representing a relative trigger or an absolute date-time string."
        },
        "message": {
          "type": "string",
          "description": "The message to be displayed or sent with the notification."
        }
      },
      "additionalProperties": false
    },
    "Location": {
      "title": "Location",
      "description": "A structured representation of the event location.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name or title of the location."
        },
        "address": {
          "type": "string",
          "description": "The physical address of the location."
        },
        "latitude": {
          "type": "number",
          "description": "The latitude coordinate of the location."
        },
        "longitude": {
          "type": "number",
          "description": "The longitude coordinate of the location."
        },
        "mapUrl": {
          "type": "string",
          "format": "uri",
          "description": "An optional URL for a map service (e.g., Google Maps, Apple Maps) to view the location."
        }
      },
      "additionalProperties": false
    },
    "Organizer": {
      "title": "Organizer",
      "description": "The organizer of the event.",
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The organizer's name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The organizer's email address."
        }
      },
      "additionalProperties": false
    },
    "Event": {
      "title": "Event",
      "description": "A calendar event with all relevant properties.",
      "type": "object",
      "required": [
        "uid",
        "summary",
        "start",
        "end"
      ],
      "properties": {
        "uid": {
          "type": "string",
          "description": "A globally unique identifier for the event."
        },
        "summary": {
          "type": "string",
          "description": "A short title or summary for the event."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the event. (UTF-8 encoded; no legacy escaping or folding needed.)"
        },
        "location": {
          "$ref": "#/$defs/Location"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "The event start date and time in ISO 8601 format, including the timezone offset (e.g., '2024-03-10T10:00:00-05:00')"
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "The event end date and time in ISO 8601 format, including the timezone offset (e.g., '2024-03-10T10:00:00-05:00')"
        },
        "recurrence": {
          "$ref": "#/$defs/Recurrence"
        },
        "notifications": {
          "type": "array",
          "description": "Optional notifications or reminders for the event.",
          "items": {
            "$ref": "#/$defs/Notification"
          }
        },
        "attendees": {
          "type": "array",
          "description": "Optional list of event attendees.",
          "items": {
            "$ref": "#/$defs/Attendee"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO 8601 date-time indicating when the event was created."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "An ISO 8601 date-time indicating when the event was last modified."
        },
        "status": {
          "type": "string",
          "enum": [
            "confirmed",
            "tentative",
            "cancelled"
          ],
          "description": "The status of the event."
        },
        "transparency": {
          "type": "string",
          "enum": [
            "opaque",
            "transparent"
          ],
          "description": "Indicates whether the event blocks time on a calendar. 'opaque' means it does block time, 'transparent' means it does not."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "A URL linking to more detailed information about the event."
        },
        "organizer": {
          "$ref": "#/$defs/Organizer"
        }
      },
      "additionalProperties": false
    },
    "Calendar": {
      "title": "Calendar",
      "description": "A calendar with its associated metadata and events.",
      "type": "object",
      "required": [
        "timezone",
        "events"
      ],
      "properties": {
        "timezone": {
          "type": "string",
          "description": "This field is crucial for accurate event scheduling and should adhere to the IANA time zone database"
        },
        "name": {
          "type": "string",
          "description": "An optional human-readable name for the calendar."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the calendar."
        },
        "events": {
          "type": "array",
          "description": "A list of calendar events.",
          "items": {
            "$ref": "#/$defs/Event"
          }
        }
      },
      "additionalProperties": false
    }
  },
  "type": "object",
  "required": [
    "version",
    "calendar"
  ],
  "properties": {
    "version": {
      "type": "string",
      "enum": [
        "1.0"
      ],
      "description": "The version of the jCal format."
    },
    "productIdentifier": {
      "type": "string",
      "description": "An optional identifier for the application or system that last modified the file"
    },
    "calendar": {
      "$ref": "#/$defs/Calendar"
    }
  },
  "additionalProperties": false
}